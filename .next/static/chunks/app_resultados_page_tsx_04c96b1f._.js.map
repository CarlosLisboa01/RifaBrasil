{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Vizantu.dev/RifaBrasil/app/resultados/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { supabase } from '@/utils/supabase';\r\nimport { Raffle } from '@/types';\r\n\r\ntype RaffleWithWinner = Raffle & {\r\n  winner: {\r\n    name: string;\r\n    chosen_numbers: number[];\r\n  } | null;\r\n};\r\n\r\nexport default function ResultadosPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [completedRaffles, setCompletedRaffles] = useState<RaffleWithWinner[]>([]);\r\n  const [upcomingRaffles, setUpcomingRaffles] = useState<Raffle[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRaffles = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Buscar sorteios completos com vencedores\r\n        const { data: completedData, error: completedError } = await supabase\r\n          .from('raffles')\r\n          .select(`\r\n            *,\r\n            winner:participants!raffles_winner_id_fkey(name, chosen_numbers)\r\n          `)\r\n          .eq('status', 'completed')\r\n          .order('drawn_at', { ascending: false });\r\n          \r\n        if (completedError) throw completedError;\r\n        \r\n        // Buscar sorteios abertos ou fechados (ainda não sorteados)\r\n        const { data: upcomingData, error: upcomingError } = await supabase\r\n          .from('raffles')\r\n          .select('*')\r\n          .in('status', ['open', 'closed'])\r\n          .order('created_at', { ascending: false });\r\n          \r\n        if (upcomingError) throw upcomingError;\r\n        \r\n        setCompletedRaffles(completedData || []);\r\n        setUpcomingRaffles(upcomingData || []);\r\n      } catch (error: any) {\r\n        console.error('Erro ao buscar sorteios:', error);\r\n        setError(error.message || 'Erro ao carregar os sorteios');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchRaffles();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-[60vh]\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto mt-8 mb-12 px-4\">\r\n      <h1 className=\"text-3xl font-bold text-center text-blue-600 mb-10\">Resultados dos Sorteios</h1>\r\n      \r\n      {error && (\r\n        <div className=\"mb-6 p-4 bg-red-100 text-red-700 rounded-md\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mb-12\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Sorteios Realizados</h2>\r\n        \r\n        {completedRaffles.length === 0 ? (\r\n          <div className=\"text-center py-10 bg-white rounded-lg shadow-sm\">\r\n            <p className=\"text-gray-500\">Ainda não há sorteios finalizados.</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            {completedRaffles.map((raffle) => (\r\n              <div key={raffle.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"p-5\">\r\n                  <h3 className=\"font-bold text-lg mb-2 text-title\">{raffle.title}</h3>\r\n                  <p className=\"text-sm text-description mb-4\">{raffle.description}</p>\r\n                  \r\n                  <div className=\"border-t border-gray-100 pt-4 mt-2\">\r\n                    <h4 className=\"font-medium text-sm text-title mb-2\">Vencedor</h4>\r\n                    \r\n                    {raffle.winner ? (\r\n                      <div>\r\n                        <p className=\"font-bold text-important\">{raffle.winner.name}</p>\r\n                        <div className=\"mt-2\">\r\n                          <span className=\"text-xs text-title\">Números escolhidos:</span>\r\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                            {raffle.winner.chosen_numbers.map((number) => (\r\n                              <span key={number} className=\"inline-block px-2 py-1 bg-blue-100 text-black rounded-full text-xs\">\r\n                                {number}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <p className=\"text-description italic\">Informação não disponível</p>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"text-right mt-4 text-sm text-description\">\r\n                    {raffle.drawn_at ? (\r\n                      <span>Realizado em: {new Date(raffle.drawn_at).toLocaleDateString('pt-BR')}</span>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div>\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Próximos Sorteios</h2>\r\n        \r\n        {upcomingRaffles.length === 0 ? (\r\n          <div className=\"text-center py-10 bg-white rounded-lg shadow-sm\">\r\n            <p className=\"text-gray-500\">Não há sorteios programados no momento.</p>\r\n            <Link\r\n              href=\"/participar\"\r\n              className=\"inline-block mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Ver sorteios disponíveis\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            {upcomingRaffles.map((raffle) => (\r\n              <div key={raffle.id} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"p-5\">\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <h3 className=\"font-bold text-lg\">{raffle.title}</h3>\r\n                    <span className={`px-2 py-1 text-xs rounded-full ${\r\n                      raffle.status === 'open' \r\n                        ? 'bg-green-100 text-green-800' \r\n                        : 'bg-yellow-100 text-yellow-800'\r\n                    }`}>\r\n                      {raffle.status === 'open' ? 'Aberto' : 'Fechado'}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <p className=\"text-sm text-gray-600 mb-4\">{raffle.description}</p>\r\n                  \r\n                  <div className=\"flex justify-between text-sm text-gray-500\">\r\n                    <span>Números: {raffle.min_number} a {raffle.max_number}</span>\r\n                    <span>Criado em: {new Date(raffle.created_at).toLocaleDateString('pt-BR')}</span>\r\n                  </div>\r\n                  \r\n                  {raffle.status === 'open' && (\r\n                    <div className=\"mt-4\">\r\n                      <Link\r\n                        href=\"/participar\"\r\n                        className=\"inline-block w-full text-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n                      >\r\n                        Participar\r\n                      </Link>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}